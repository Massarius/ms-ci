# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Standard values.yaml can be found at: 
# https://github.com/helm/charts/blob/master/stable/jenkins/values.yaml
controller:
  tag: "2.300"
  containerEnv:
    - name: PROJECT_ID
      valueFrom:
        secretKeyRef:
            name: jenkins-k8s-config
            key: project_id
    - name: GITHUB_REPO
      valueFrom:
        secretKeyRef:
            name: github-secrets
            key: github_repo
    - name: GITHUB_USERNAME
      valueFrom:
        secretKeyRef:
            name: github-secrets
            key: github_username
    - name: GITHUB_TOKEN
      valueFrom:
        secretKeyRef:
            name: github-secrets
            key: github_token
    - name: jenkins_tf_ksa
      valueFrom:
        secretKeyRef:
            name: jenkins-k8s-config
            key: jenkins_tf_ksa
  servicePort: 80
  serviceType: LoadBalancer
  installPlugins:
      - blueocean:1.25.5
      - configuration-as-code:1414.v878271fc496f
      - checks-api:1.7.4
      - sshd:3.242.va_db_9da_b_26a_c3
      - workflow-aggregator:590.v6a_d052e5a_a_b_5
      - kubernetes:1.31.3
      - plain-credentials:1.8
      - kubernetes-credentials:0.9.0
      - favorite:2.4.1
      - git-client:3.11.0
      - github:1.34
      - git:4.10.2
      - pipeline-stage-tags-metadata:2.2114.v2654ca_721309
      - authentication-tokens:1.4
      - pipeline-model-extensions:2.2114.v2654ca_721309 
      - token-macro:308.v4f2b_ed62b_b_16
      - mailer:438.v02c7f0a_12fa_4
      - command-launcher:80.v4a_97f2027398
      - cloudbees-folder:6.729.v2b_9d1a_74d673 
      - job-dsl:1.81
      - junit:1119.1121.vc43d0fc45561
      - workflow-scm-step:400.v6b_89a_1317c9a_
      - pipeline-build-step:2.18
      - ace-editor:1.1
      - sse-gateway:1.25
      - credentials:1139.veb_9579fca_33b_
  JCasC:
    enabled: true
    configScripts:
        cloud: |
            jenkins:
                clouds:
                    - kubernetes:
                        name: "gke-executors"
                        serverUrl: "https://kubernetes.default"
                        jenkinsTunnel: "jenkins-agent:50000"
                        jenkinsUrl: "http://jenkins:80"
                        skipTlsVerify: true
                        namespace: "default"
                        templates:
                            - name: "jenkins-jnlp"
                              namespace: "default"
                              nodeUsageMode: NORMAL
                              label: "jnlp-exec"
                              containers:
                                - name: "jnlp"
                                  image: "jenkins/jnlp-slave"
                                  alwaysPullImage: false
                                  workingDir: "/home/jenkins/agent"
                                  ttyEnabled: true
                                  command: ""
                                  args: ""
                                  resourceRequestCpu: "500m"
                                  resourceLimitCpu: "1000m"
                                  resourceRequestMemory: "1Gi"
                                  resourceLimitMemory: "2Gi"
                              volumes:
                                - emptyDirVolume:
                                    memory: false
                                    mountPath: "/tmp"
                              idleMinutes: "1"
                              activeDeadlineSeconds: "120"
                              slaveConnectTimeout: "1000"
                            - name: "terraform"
                              namespace: "default"
                              nodeUsageMode: NORMAL
                              serviceAccount: ${jenkins_tf_ksa}
                              label: "terraform-exec"
                              containers:
                                - name: "terraform"
                                  image: "hashicorp/terraform:0.12.29"
                                  alwaysPullImage: false
                                  workingDir: "/home/jenkins/agent"
                                  ttyEnabled: true
                                  command: "/bin/sh -c"
                                  args: "cat"
                                  resourceRequestCpu: "100m"
                                  resourceLimitCpu: "500m"
                                  resourceRequestMemory: "500Mi"
                                  resourceLimitMemory: "1Gi"
                              volumes:
                                - emptyDirVolume:
                                    memory: false
                                    mountPath: "/tmp"
                              podRetention: "never"
                              activeDeadlineSeconds: "300"
                              slaveConnectTimeout: "1000"
        credentials: |
            credentials:
                system:
                    domainCredentials:
                    - credentials:
                        - usernamePassword:
                            scope: GLOBAL
                            id: "github-token"
                            username: ${GITHUB_USERNAME}
                            password: ${GITHUB_TOKEN}
                            description: "Github personal token"
        init-jobs: |
            jobs:
              - script: >
                    multibranchPipelineJob('terraform-jenkins-create-env') {
                        factory {
                        workflowBranchProjectFactory {
                            scriptPath('pipelines/environments/Jenkinsfile')
                        }
                        }
                        branchSources {
                        github {
                            id('13374160')
                            scanCredentialsId('github-token')
                            repoOwner("${GITHUB_USERNAME}")
                            repository("${GITHUB_REPO}")
                            buildOriginBranch(true)
                            buildOriginPRMerge(true)
                            includes("dev prod PR*")
                        }
                        }
                        orphanedItemStrategy {
                        discardOldItems {
                            numToKeep(10)
                        }
                        }
                        triggers {
                        periodic(1)
                        }
                    }
